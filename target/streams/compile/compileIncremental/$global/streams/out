[0m[[0m[0mdebug[0m] [0m[0mInvalidating /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar: stamp changed from lastModified(1509141854000) to lastModified(1521029755000)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Clase3Marzo.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/cclse24.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/marzo24.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Listas.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/ProductosCoproductos.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Funciones.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/EjemplosClases.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Functor.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Implicitos.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/ColleccionesScala.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/CombineExercise.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/ExpresionRegular.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Monadas.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Futuros.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/HelloWorld.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Ejercicios.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/US.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/COP$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/HelloWorld$delayedInit$body.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Exec$delayedInit$body.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/DemoVarianzaContravarianza.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Ejercicios.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Mensaje$$anon$1.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Sumable.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/marzo24$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/A$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Veh√≠culo.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/objeto1.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Moto.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/OptionDemo$delayedInit$body.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/SumableOps$delayedInit$body.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/MensajeError.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/US$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Clase3Marzo$Operacion.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/DemoVarianzaContravarianza$Parqueadero.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/A.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/EUR$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Persona.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Exec.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Juridica$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/OptionDemo.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/DemoVarianzaContravarianza$Parqueadero2.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/HelloWorld$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Carro.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Clase3Marzo$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Exec$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/estado.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/DemoVarianzaContravarianza$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/EUR.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/HelloWorld.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/SumableOps$Sumable$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Clase3Marzo$delayedInit$body.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/COP.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/marzo24.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/objeto1$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/SumableOps$StringSumable$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/plano.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Juridica.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Mensaje.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/SumableOps.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/marzo24$delayedInit$body.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Clase3Marzo.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/cifrado.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/SumableOps$PersonaSumable$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/OptionDemo$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/SumableOps$.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Currency.class, /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes/Mensaje$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(SumableOps, objeto1, estado, Veh√≠culo, OptionDemo, DemoVarianzaContravarianza.Parqueadero, Carro, US, A, Sumable, DemoVarianzaContravarianza.Parqueadero2, Ejercicios, Juridica, SumableOps.Sumable, DemoVarianzaContravarianza, Currency, MensajeError, SumableOps.PersonaSumable, cifrado, Mensaje, Clase3Marzo.Operacion, Persona, SumableOps.StringSumable, COP, marzo24, plano, Exec, HelloWorld, Moto, EUR, Clase3Marzo)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Clase3Marzo.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/HelloWorld.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/cclse24.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/marzo24.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Ejercicios.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(/home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Clase3Marzo.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/HelloWorld.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/cclse24.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/marzo24.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Ejercicios.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(SumableOps, objeto1, estado, Veh√≠culo, OptionDemo, DemoVarianzaContravarianza.Parqueadero, Carro, US, A, Sumable, DemoVarianzaContravarianza.Parqueadero2, Ejercicios, Juridica, SumableOps.Sumable, DemoVarianzaContravarianza, Currency, MensajeError, SumableOps.PersonaSumable, cifrado, Mensaje, Clase3Marzo.Operacion, Persona, SumableOps.StringSumable, COP, marzo24, plano, Exec, HelloWorld, Moto, EUR, Clase3Marzo)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Listas.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/ProductosCoproductos.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Clase3Marzo.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/HelloWorld.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Funciones.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/EjemplosClases.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Functor.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Implicitos.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/ColleccionesScala.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/CombineExercise.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/cclse24.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/marzo24.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/ExpresionRegular.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Monadas.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Futuros.scala, /home/mateo/IdeaProjects/HelloWorldScala/src/main/scala/Ejercicios.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 13 sources: invalidated sources (16) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 13 Scala sources to /home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.1:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 5a444ace for Scala compiler version 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes:/home/mateo/.sbt/boot/scala-2.12.4/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/mateo/IdeaProjects/HelloWorldScala/target/scala-2.12/classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 4.254802565 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Classes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Classes)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Classes)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Classes,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(Classes,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Classes has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(Classes,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Classes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Exec...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Exec)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Exec)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Exec,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(Exec,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(promediarValores,[Default]), UsedName(==,[Default]), UsedName(sumarValores,[Default]))) invalidates 1 classes due to The Exec has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(Exec,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(promediarValores,[Default]), UsedName(==,[Default]), UsedName(sumarValores,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Exec)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Listas2...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Listas2)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Listas2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Listas2,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(listaFuncion2,[Default]), UsedName(finalize,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(frutas,[Default]), UsedName(args,[Default]), UsedName(nuevaLista2,[Default]), UsedName(nuevaLista3,[Default]), UsedName(nuevaLista4,[Default]), UsedName(hashCode,[Default]), UsedName(Listas2,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nuevaLista5,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(listaFuncion,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(nuevaLista,[Default]), UsedName(==,[Default]), UsedName(fruits,[Default]), UsedName(listaUniforme,[Default]))) invalidates 1 classes due to The Listas2 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(listaFuncion2,[Default]), UsedName(finalize,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(frutas,[Default]), UsedName(args,[Default]), UsedName(nuevaLista2,[Default]), UsedName(nuevaLista3,[Default]), UsedName(nuevaLista4,[Default]), UsedName(hashCode,[Default]), UsedName(Listas2,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nuevaLista5,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(listaFuncion,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(nuevaLista,[Default]), UsedName(==,[Default]), UsedName(fruits,[Default]), UsedName(listaUniforme,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Listas2)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from US...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(US)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(US)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(US,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(US,[Default]), UsedName(notifyAll,[Default]), UsedName(US;init;,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]))) invalidates 1 classes due to The US has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(US,[Default]), UsedName(notifyAll,[Default]), UsedName(US;init;,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(US)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ProductosCoproductos.COP...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ProductosCoproductos.COP)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ProductosCoproductos.COP)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ProductosCoproductos.COP,ModifiedNames(changes = UsedName(ProductosCoproductos;COP;init;,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(apply,[Default]), UsedName(notifyAll,[Default]), UsedName(andThen,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(compose,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]), UsedName(COP,[Default]))) invalidates 1 classes due to The ProductosCoproductos.COP has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ProductosCoproductos;COP;init;,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(apply,[Default]), UsedName(notifyAll,[Default]), UsedName(andThen,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(compose,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]), UsedName(COP,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ProductosCoproductos.COP)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Currency...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Currency)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Currency)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Currency,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(Currency,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Currency has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(Currency,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Currency)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Person...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Person)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Person)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Person,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(showMeInnerSecret,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(returnPersonalInformation,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Person,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(Person;init;,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Person has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(showMeInnerSecret,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(returnPersonalInformation,[Default]), UsedName(name,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Person,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(Person;init;,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Person)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Conjuntos...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Conjuntos)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Conjuntos)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Conjuntos,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(conjunto2,[Default]), UsedName(finalize,[Default]), UsedName(conjunto1,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(conjuntoDiferencia1,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(conjuntoDiferencia2,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(conjuntoInterseccion,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(conjuntoUnion,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Conjuntos,[Default]))) invalidates 1 classes due to The Conjuntos has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(conjunto2,[Default]), UsedName(finalize,[Default]), UsedName(conjunto1,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(conjuntoDiferencia1,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(conjuntoDiferencia2,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(conjuntoInterseccion,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(conjuntoUnion,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Conjuntos,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Conjuntos)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ProductosCoproductos.EUR...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ProductosCoproductos.EUR)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ProductosCoproductos.EUR)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ProductosCoproductos.EUR,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(apply,[Default]), UsedName(EUR,[Default]), UsedName(notifyAll,[Default]), UsedName(andThen,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(compose,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(ProductosCoproductos;EUR;init;,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]))) invalidates 1 classes due to The ProductosCoproductos.EUR has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(apply,[Default]), UsedName(EUR,[Default]), UsedName(notifyAll,[Default]), UsedName(andThen,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(compose,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(ProductosCoproductos;EUR;init;,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ProductosCoproductos.EUR)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from marzo24...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(marzo24)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(marzo24)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(marzo24,ModifiedNames(changes = UsedName(event,[Default]), UsedName(marzo24,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(result,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The marzo24 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(event,[Default]), UsedName(marzo24,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(result,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(marzo24)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from objeto1...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(objeto1)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(objeto1)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(objeto1,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(funcion,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(toCOP,[Default]), UsedName(objeto1,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The objeto1 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(funcion,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(toCOP,[Default]), UsedName(objeto1,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(objeto1)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from combineOps.combineOptions...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(combineOps.combineOptions)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(combineOps.combineOptions)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(combineOps.combineOptions,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(combine,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(combineOptions,[Implicit]))) invalidates 1 classes due to The combineOps.combineOptions has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(combineOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(combineOps.combineOptions)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Semigroup...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Semigroup)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding combineOps.combineOptions by Semigroup[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding combineOps.combineInt by Semigroup[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(combineOps.combineInt, Semigroup, combineOps.combineOptions)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Semigroup,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Semigroup,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(combine,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 3 classes due to The Semigroup has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Semigroup,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(combine,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(combineOps.combineInt, Semigroup, combineOps.combineOptions)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ProductosCoproductos.Currency...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ProductosCoproductos.Currency)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding ProductosCoproductos.EUR by ProductosCoproductos.Currency[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding ProductosCoproductos.US by ProductosCoproductos.Currency[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding ProductosCoproductos.COP by ProductosCoproductos.Currency[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ProductosCoproductos.Currency, ProductosCoproductos.US, ProductosCoproductos.COP, ProductosCoproductos.EUR)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ProductosCoproductos.Currency,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(Currency,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 4 classes due to The ProductosCoproductos.Currency has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(Currency,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(value,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ProductosCoproductos.Currency, ProductosCoproductos.US, ProductosCoproductos.COP, ProductosCoproductos.EUR)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from combineOps.combineInt...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(combineOps.combineInt)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(combineOps.combineInt)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(combineOps.combineInt,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(combineInt,[Implicit]), UsedName($asInstanceOf,[Default]), UsedName(combine,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The combineOps.combineInt has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(combineInt,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(combineOps.combineInt)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Movie...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Movie)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Movie)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Movie,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(academyAwardBestMoviesForYear,[Default]), UsedName(Movie,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(year,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Movie;init;,[Default]))) invalidates 1 classes due to The Movie has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(academyAwardBestMoviesForYear,[Default]), UsedName(Movie,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(year,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(Movie;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Movie)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from EUR...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(EUR)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(EUR)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(EUR,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName(EUR;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(EUR,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]))) invalidates 1 classes due to The EUR has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName(EUR;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(EUR,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(EUR)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Implicitos...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Implicitos)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Implicitos)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Implicitos,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(v,[Implicit]), UsedName(tostr,[Implicit]), UsedName(finalize,[Default]), UsedName(sum,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(persona,[Default]), UsedName(hashCode,[Default]), UsedName(Operacion,[Implicit]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(personToInt,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(addEdad,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Implicitos,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(func,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Implicitos has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(v,[Implicit]), UsedName(tostr,[Implicit]), UsedName(Operacion,[Implicit]), UsedName(personToInt,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Implicitos)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Clase3Marzo.Operacion...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Clase3Marzo.Operacion)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Clase3Marzo.Operacion)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Clase3Marzo.Operacion,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(Clase3Marzo;Operacion;init;,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(Operacion,[Implicit]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(>==,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Clase3Marzo.Operacion has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Operacion,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Clase3Marzo.Operacion)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from combineOps...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(combineOps)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(combineOps)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(combineOps,ModifiedNames(changes = UsedName(OperateSemigroup,[Implicit]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(a,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(combineOps,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(b,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(combineInt,[Implicit]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(combineOptions,[Implicit]))) invalidates 1 classes due to The combineOps has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(OperateSemigroup,[Implicit]), UsedName(combineInt,[Implicit]), UsedName(combineOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(combineOps)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Point...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Point)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Point)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Point,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Point,[Default]), UsedName(hashCode,[Default]), UsedName(Point;init;,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Point has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Point,[Default]), UsedName(hashCode,[Default]), UsedName(Point;init;,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Point)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from FuncionAnonima...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(FuncionAnonima)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(FuncionAnonima)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(FuncionAnonima,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(lambda5,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(FuncionAnonima,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(lambda4,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(lambda3,[Default]), UsedName(lambda,[Default]), UsedName(lambda2,[Default]))) invalidates 1 classes due to The FuncionAnonima has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(lambda5,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(FuncionAnonima,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(lambda4,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(lambda3,[Default]), UsedName(lambda,[Default]), UsedName(lambda2,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(FuncionAnonima)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ProductosCoproductos.objeto1...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ProductosCoproductos.objeto1)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ProductosCoproductos.objeto1)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ProductosCoproductos.objeto1,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(funcion,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(toCOP,[Default]), UsedName(objeto1,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The ProductosCoproductos.objeto1 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(funcion,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(toCOP,[Default]), UsedName(objeto1,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ProductosCoproductos.objeto1)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Functor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Functor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Functor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Functor,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(Tuple2Functor,[Implicit]), UsedName(finalize,[Default]), UsedName(apply,[Default]), UsedName(Functor,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Tuple2Functor2,[Implicit]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(map,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Functor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Tuple2Functor,[Implicit]), UsedName(Tuple2Functor2,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Functor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Listas...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Listas)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Listas)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Listas,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(Listas,[Default]), UsedName(aa,[Default]), UsedName(!=,[Default]), UsedName(promediarValores,[Default]), UsedName(==,[Default]), UsedName(sumarUnoValores,[Default]))) invalidates 1 classes due to The Listas has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(Listas,[Default]), UsedName(aa,[Default]), UsedName(!=,[Default]), UsedName(promediarValores,[Default]), UsedName(==,[Default]), UsedName(sumarUnoValores,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Listas)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Clase3Marzo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Clase3Marzo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Clase3Marzo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Clase3Marzo,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(v,[Implicit]), UsedName(tostr,[Implicit]), UsedName(finalize,[Default]), UsedName(sum,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(persona,[Default]), UsedName(hashCode,[Default]), UsedName(Operacion,[Implicit]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(personToInt,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(addEdad,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Clase3Marzo,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(funci,[Default]))) invalidates 1 classes due to The Clase3Marzo has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(v,[Implicit]), UsedName(tostr,[Implicit]), UsedName(Operacion,[Implicit]), UsedName(personToInt,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Clase3Marzo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ProductosCoproductos.US...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ProductosCoproductos.US)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ProductosCoproductos.US)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ProductosCoproductos.US,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(apply,[Default]), UsedName(US,[Default]), UsedName(ProductosCoproductos;US;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(andThen,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(compose,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]))) invalidates 1 classes due to The ProductosCoproductos.US has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(apply,[Default]), UsedName(US,[Default]), UsedName(ProductosCoproductos;US;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(andThen,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(canEqual,[Default]), UsedName(compose,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ProductosCoproductos.US)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ExpresionRegular...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ExpresionRegular)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ExpresionRegular)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ExpresionRegular,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(evaluar,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(ExpresionRegular,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The ExpresionRegular has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(evaluar,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(ExpresionRegular,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ExpresionRegular)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from combineOps.OperateSemigroup...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(combineOps.OperateSemigroup)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(combineOps.OperateSemigroup)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(combineOps.OperateSemigroup,ModifiedNames(changes = UsedName(OperateSemigroup,[Implicit]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(combineOps;OperateSemigroup;init;,[Default]), UsedName(¬∞,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The combineOps.OperateSemigroup has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(OperateSemigroup,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(combineOps.OperateSemigroup)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Funciones...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Funciones)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Funciones)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Funciones,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(calcularFactorial3,[Default]), UsedName(funcion1,[Default]), UsedName(finalize,[Default]), UsedName(calcularFibonacci$default$2,[Default]), UsedName(calcularFactorial2,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Funciones,[Default]), UsedName(args,[Default]), UsedName(calcularFactorial,[Default]), UsedName(calcularMDC1,[Default]), UsedName(hashCode,[Default]), UsedName(suma,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(GCD,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(fact0,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(calcularFibonacci$default$3,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(div,[Default]), UsedName(calcularFibonacci,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(y,[Default]), UsedName(fact1,[Default]))) invalidates 1 classes due to The Funciones has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(calcularFactorial3,[Default]), UsedName(funcion1,[Default]), UsedName(finalize,[Default]), UsedName(calcularFibonacci$default$2,[Default]), UsedName(calcularFactorial2,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Funciones,[Default]), UsedName(args,[Default]), UsedName(calcularFactorial,[Default]), UsedName(calcularMDC1,[Default]), UsedName(hashCode,[Default]), UsedName(suma,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(GCD,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(fact0,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(calcularFibonacci$default$3,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(div,[Default]), UsedName(calcularFibonacci,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(y,[Default]), UsedName(fact1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Funciones)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Implicitos.Operacion...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Implicitos.Operacion)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Implicitos.Operacion)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Implicitos.Operacion,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(Implicitos;Operacion;init;,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(Operacion,[Implicit]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(>==,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Implicitos.Operacion has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Operacion,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Implicitos.Operacion)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ProductosCoproductos...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ProductosCoproductos)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ProductosCoproductos)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ProductosCoproductos,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(US,[Default]), UsedName(Currency,[Default]), UsedName(EUR,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(ProductosCoproductos,[Default]), UsedName(toString,[Default]), UsedName(objeto1,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ProductosCoproductos;init;,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(COP,[Default]))) invalidates 1 classes due to The ProductosCoproductos has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(US,[Default]), UsedName(Currency,[Default]), UsedName(EUR,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(ProductosCoproductos,[Default]), UsedName(toString,[Default]), UsedName(objeto1,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ProductosCoproductos;init;,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(COP,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ProductosCoproductos)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Futuros...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Futuros)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Futuros)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Futuros,ModifiedNames(changes = UsedName(event,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(int3,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(result,[Default]), UsedName(_,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getNombre,[Default]), UsedName(main,[Default]), UsedName(Futuros,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(event2,[Default]), UsedName($asInstanceOf,[Default]), UsedName(int1,[Default]), UsedName(getEdad,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(getApellido,[Default]), UsedName(int2,[Default]))) invalidates 1 classes due to The Futuros has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(event,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(int3,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(args,[Default]), UsedName(hashCode,[Default]), UsedName(result,[Default]), UsedName(_,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getNombre,[Default]), UsedName(main,[Default]), UsedName(Futuros,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(executionStart,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(event2,[Default]), UsedName($asInstanceOf,[Default]), UsedName(int1,[Default]), UsedName(getEdad,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(getApellido,[Default]), UsedName(int2,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Futuros)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from MonadaOps.MonadaEither...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(MonadaOps.MonadaEither)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(MonadaOps.MonadaEither)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(MonadaOps.MonadaEither,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(flatMap,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(MonadaEither,[Implicit]), UsedName(hashCode,[Default]), UsedName(pure,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The MonadaOps.MonadaEither has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MonadaEither,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(MonadaOps.MonadaEither)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from MonadaOps.MonadaTry...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(MonadaOps.MonadaTry)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(MonadaOps.MonadaTry)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(MonadaOps.MonadaTry,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(flatMap,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(pure,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(MonadaTry,[Implicit]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The MonadaOps.MonadaTry has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MonadaTry,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(MonadaOps.MonadaTry)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from MonadaOps.MonadaOption...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(MonadaOps.MonadaOption)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(MonadaOps.MonadaOption)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(MonadaOps.MonadaOption,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(flatMap,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(MonadaOption,[Implicit]), UsedName(hashCode,[Default]), UsedName(pure,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The MonadaOps.MonadaOption has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MonadaOption,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(MonadaOps.MonadaOption)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from COP...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(COP)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(COP)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(COP,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(COP;init;,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]), UsedName(COP,[Default]))) invalidates 1 classes due to The COP has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(value,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(COP;init;,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy$default$1,[Default]), UsedName(COP,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(COP)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from HelloWorld...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(HelloWorld)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(HelloWorld)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(HelloWorld,ModifiedNames(changes = UsedName(calcularFactorial3,[Default]), UsedName(funcion1,[Default]), UsedName(cube,[Default]), UsedName(calcularFibonacci$default$2,[Default]), UsedName(calcularFactorial2,[Default]), UsedName(sayHello,[Default]), UsedName(calcularFactorial,[Default]), UsedName(calcularMDC1,[Default]), UsedName(suma,[Default]), UsedName(GCD,[Default]), UsedName(fact0,[Default]), UsedName(calcularFibonacci$default$3,[Default]), UsedName(calcularFibonacci,[Default]), UsedName(y,[Default]), UsedName(fact1,[Default]))) invalidates 1 classes due to The HelloWorld has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(calcularFactorial3,[Default]), UsedName(funcion1,[Default]), UsedName(cube,[Default]), UsedName(calcularFibonacci$default$2,[Default]), UsedName(calcularFactorial2,[Default]), UsedName(sayHello,[Default]), UsedName(calcularFactorial,[Default]), UsedName(calcularMDC1,[Default]), UsedName(suma,[Default]), UsedName(GCD,[Default]), UsedName(fact0,[Default]), UsedName(calcularFibonacci$default$3,[Default]), UsedName(calcularFibonacci,[Default]), UsedName(y,[Default]), UsedName(fact1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(HelloWorld)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from MonadaOps.MonadLaws...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(MonadaOps.MonadLaws)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(MonadaOps.MonadLaws)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(MonadaOps.MonadLaws,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(MonadLaws,[Default]), UsedName(notifyAll,[Default]), UsedName(leftIdentity,[Default]), UsedName(getClass,[Default]), UsedName(rightIdentity,[Default]), UsedName(associativityIdentity,[Default]), UsedName(hashCode,[Default]), UsedName(f,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(g,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The MonadaOps.MonadLaws has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(MonadLaws,[Default]), UsedName(notifyAll,[Default]), UsedName(leftIdentity,[Default]), UsedName(getClass,[Default]), UsedName(rightIdentity,[Default]), UsedName(associativityIdentity,[Default]), UsedName(hashCode,[Default]), UsedName(f,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(g,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(MonadaOps.MonadLaws)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Ejercicios...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Ejercicios)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Ejercicios)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Ejercicios,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Ejercicios;init;,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(Ejercicios,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The Ejercicios has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Ejercicios;init;,[Default]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(Ejercicios,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Ejercicios)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from FuncionOrdenSuperior...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(FuncionOrdenSuperior)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(FuncionOrdenSuperior)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(FuncionOrdenSuperior,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(funcion,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(funcion2,[Default]), UsedName(hashCode,[Default]), UsedName(suma,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(FuncionOrdenSuperior,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(sumador,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The FuncionOrdenSuperior has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(funcion,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(funcion2,[Default]), UsedName(hashCode,[Default]), UsedName(suma,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(FuncionOrdenSuperior,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(sumador,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(FuncionOrdenSuperior)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Monada...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Monada)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding MonadaOps.MonadaEither by Monada[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding MonadaOps.MonadaTry by Monada[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding MonadaOps.MonadaOption by Monada[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(MonadaOps.MonadaOption, MonadaOps.MonadaEither, MonadaOps.MonadaTry, Monada)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Monada,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(flatMap,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Monada,[Default]), UsedName(hashCode,[Default]), UsedName(pure,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 4 classes due to The Monada has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(flatMap,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(Monada,[Default]), UsedName(hashCode,[Default]), UsedName(pure,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(MonadaOps.MonadaOption, MonadaOps.MonadaEither, MonadaOps.MonadaTry, Monada)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from MonadaOps...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(MonadaOps)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(MonadaOps)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(MonadaOps,ModifiedNames(changes = UsedName(either,[Default]), UsedName($isInstanceOf,[Default]), UsedName(MonadaOps,[Default]), UsedName(finalize,[Default]), UsedName(MonadLaws,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(MonadaEither,[Implicit]), UsedName(MonadaOption,[Implicit]), UsedName(hashCode,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(MonadaTry,[Implicit]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The MonadaOps has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MonadaEither,[Implicit]), UsedName(MonadaOption,[Implicit]), UsedName(MonadaTry,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(MonadaOps)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
